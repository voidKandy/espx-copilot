use log::{debug, error};
use lsp_types::TextDocumentPositionParams;
use nom::{self, bytes::complete::tag, IResult};

use crate::text_store::get_text_document;

#[derive(Debug, Clone, PartialEq)]
pub enum Position {
    AttributeName(String),
    AttributeValue { name: String, value: String },
}

fn parse_for_prompt_prefix(input: &str) -> IResult<&str, &str> {
    nom::ta
}

pub fn get_position_from_lsp_completion(
    text_params: TextDocumentPositionParams,
) -> Option<Position> {
    debug!("get_position_from_lsp_completion");
    let text = get_text_document(text_params.text_document.uri)?;
    debug!("get_position_from_lsp_completion: text {}", text);
    let pos = text_params.position;
    debug!("get_position_from_lsp_completion: pos {:?}", pos);

    let prompt_pattern = "// ???";

    if text.contains(prompt_pattern) {
        Some(Position::AttributeName("hx-special-test".to_string()))
    } else {
        None
    }
}
